2.4 运算符
(1) 常用运算符的作用
	1.算术运算符：+、-、*、/、%分别表示加、减、乘、除、取余。
		两个整数做除法时，如果除不开，程序将把小数部分直接截断(不是四舍五入)。
		即：整数/整数＝整数，浮点数/浮点数＝浮点数。
		学习过其他语言的同学要注意，C++中没有乘方运算符，"^"也不是乘方运算符。
	2.比较运算符：
		>、>=、<、<=、==(相等)、!=(不等)用来判断不等关系，返回值是true或false。
		小心，千万不要把"=="写成"="！
		永远不要对浮点数使用==和!=运算符！正确的做法是：
			const double eps = 0.000001;// 自己控制精度
			……
			if (d>=2-eps && d<=2+eps) ……// 相当于if (d==2)
		不应该判断一个变量的值是否等于true。安全的做法是判断它是否不等于false。
	3.位运算：
		&、|、^分别表示按位与、按位或、按位异或，即两个操作数上每一个二进制位都要进行运算。
		~表示按位求反。
		<<、>>表示二进制位的移动。当某一位数字移动到二进制位的外面之后，它就直接"消失"了。
		注：a<<n相当于a×2n，a>>n相当于a÷2n。
	4.逻辑运算符：
		&&、||、^分别表示与、或、异或。!表示非。
		?:是条件运算，它是C++唯一一个三目运算符。它的格式如下：A ? B : C。
			如果A不为false，那么返回B，否则返回C。
			可以将这个运算符理解为一个简化版的if。
		||、&&、?:是短路运算符 。不要在这三种运算符内调用函数或赋值，以免发生难以查出的错误！
	5.比较运算符、位移运算符、逻辑运算符、条件运算符的优先级较低，所以使用时要多加括号，以防出错。
	6.自增(++)、自减(--)运算符：
		增量分别是1和-1。
		这两种运算符只能用于数值类型的变量，不能用于非数值类型变量、常量、表达式和函数调用上。
		为了避免错误，不要让++、--和其他能够改变变量的操作在同一行出现！
	7.赋值运算符：
		在C++中赋值是一种运算符。所以你会看到i=j=0、d[x=y]、return c=i+j之类的代码。
		+=、-=、*=、……可以简化书写。例如a*=2+3相当于a=a*(2+3)。
(2) 类型强制转换
	用一对小括号把数据类型包上，则它右侧的变量或常量的值(变量本身不变)就变成了对应的类型。如：
	int i=2;
	float c=6.4/(float)i;// 把i的值变成float类型。
	两个操作数进行四则运算，如果想保留小数位，那么两个操作数应该都是浮点数。上面的代码就是这样。
(3) 运算符的优先级
	同一优先级的运算符，运算次序由结合方向所决定。
	简单记就是：！ > 算术运算符 > 关系运算符 > && > || > 赋值运算符
	详细优先级关系不必掌握，有兴趣的可以自行查阅资料。

